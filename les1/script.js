// Задание 1
// • Используя Symbol.iterator, создайте объект "Музыкальная коллекция", который можно итерировать. Каждая итерация должна возвращать следующий альбом из коллекции.

// • Создайте объект musicCollection, который содержит массив альбомов и имеет свойство-символ Symbol.iterator. Каждый альбом имеет следующую структуру:

// {
// title: "Название альбома",
// artist: "Исполнитель",
// year: "Год выпуска"
// }

// • Реализуйте кастомный итератор для объекта musicCollection. Итератор должен перебирать альбомы по порядку.
// • Используйте цикл for...of для перебора альбомов в музыкальной коллекции и вывода их на консоль в формате: Название альбома - Исполнитель (Год выпуска)


const musicCollection = [
  {
    title: "Название альбома 1",
    artist: "Исполнитель 1",
    year: "Год выпуска 1",
  },
  {
    title: "Название альбома 2",
    artist: "Исполнитель 2",
    year: "Год выпуска 2",
  },
  {
    title: "Название альбома 3",
    artist: "Исполнитель3",
    year: "Год выпуска 3",
  },
];


musicCollection[Symbol.iterator] = function () {
    return {
        current: 0,
        to: this.length,
        next() {
            return this.current < this.to
            ? {done: false, value: musicCollection[this.current++]}
            : {done: true};
        }
    }
}

for (const music of musicCollection) {
    console.log(`tittle: ${music.title}, artist: ${music.artist}, year: ${music.year}`);
}


// Задание 2
// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах. Клиенты приходят и делают заказы на разные блюда.

// Необходимо создать систему управления этими заказами, которая позволит:

// • Отслеживать, какой повар готовит какое блюдо.
// • Записывать, какие блюда заказал каждый клиент.

// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента. В качестве ключей для клиентов используйте объекты.

// Повара и их специализации:

// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.

// Блюда и их повара:

// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.

// Заказы:

// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.



const chefs = new Map([
    ['Виктор', 'Пицца'],
    ['Ольга', 'Суши'],
    ['Дмитрий', 'Десерты']
]);


const dishes = new Map([
    ['Маргарита', 'Виктор'],
    ['Пепперони', 'Виктор'],
    ['Филадельфия', 'Ольга'],
    ['Калифорния', 'Ольга'],
    ['Тирамису', 'Дмитрий'],
    ['Чизкейк', 'Дмитрий']
]);


const orders = new Map();


function addOrder(clientName, orderedDishes) {
    const dishesList = orderedDishes.map(dish => ({
        name: dish,
        chef: dishes.get(dish)
    }));
    orders.set(clientName, dishesList);
}


addOrder('Алексей', ['Пепперони', 'Тирамису']);
addOrder('Мария', ['Калифорния', 'Маргарита']);
addOrder('Ирина', ['Чизкейк']);


function displayOrders() {
    orders.forEach((dishes, client) => {
        console.log(`Заказ клиента ${client}:`);
        dishes.forEach(dish => {
            console.log(`- ${dish.name} (готовит: ${dish.chef})`);
        });
    });
}


displayOrders();